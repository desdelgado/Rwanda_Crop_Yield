{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction\n",
    "\n",
    "In this project, I will be looking at using agricultureal data from the [National Institue of Statistics of Rwanda](https://microdata.statistics.gov.rw/index.php/catalog/88/get_microdata) data repository to predict crop yield in different areas.  I believe one of the most powerful and useful applications of data science is within agriculutre.  Not only does this allow for more sustainable farming which combats climate change but also address key challenges such as food scacity.  Particulary in developing countries, sustainable food production can combat poverty and lead to stablitiy within the country.  This is a summary write up of the end-to-end process.  Later on, I will had more detailed write ups of each seperate part.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# folium map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data Engineering\n",
    "\n",
    "Again, I got this data digging around the [National Institue of Statistics of Rwanda](https://microdata.statistics.gov.rw/index.php/catalog/88/get_microdata) data repository.  Note you will need to fill out a few forms describing why you want the data.  If you click on the \"data description\" tab for 2017 in the [repository](https://microdata.statistics.gov.rw/index.php/catalog/88/data_dictionary), we see that we get a wide range of data from fertilizer to crop production to pesticides information.  We also see that the data is divided into three seasons(A,B,C) and small/large scale farms.  In this first attempt, we will be looking at crop production and fertilizer data from season A and only for large scale farms during 2017.  Crop production will have information about our target variable (yield) and after some reading, fertilizer also seems to play a crucial role.  In the later attempts, we can expand to other seasons, datasets, and farm types, but for now we are going to start small and try to extract immediate value.  Finally, once a general pipeline is created, going back and adding additional data should have less overhead.\n",
    "\n",
    "We'll first import all the important libraries.  These were added as they were needed during the project.  Note, there is a custom library `Aggro_DE` which is a toolkit I wrote to help process the data and reduce the amount of repeated code.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd  \n",
    "import Aggro_DE as AgDE "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To begin with, we can download the `SeasonA_2017_LSF_Crop production.dta` and `SeasonA_2017_LSF_Fertilizers.dta` files to a local folder.  If you load in this data, you'll notice that the column names are codes that don't mean anything.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LSF_ID</th>\n",
       "      <th>s1q1</th>\n",
       "      <th>s1q2</th>\n",
       "      <th>s2q1</th>\n",
       "      <th>s2q2</th>\n",
       "      <th>s2q4</th>\n",
       "      <th>s2q5</th>\n",
       "      <th>s2q6</th>\n",
       "      <th>s2q7</th>\n",
       "      <th>s2q8</th>\n",
       "      <th>...</th>\n",
       "      <th>s2q17</th>\n",
       "      <th>s2q18</th>\n",
       "      <th>s2q19</th>\n",
       "      <th>s2q20</th>\n",
       "      <th>s2q21</th>\n",
       "      <th>s2q22</th>\n",
       "      <th>s2q23</th>\n",
       "      <th>s2q24</th>\n",
       "      <th>s2q25</th>\n",
       "      <th>crop_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Soybean</td>\n",
       "      <td>3649.435547</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>23.0</td>\n",
       "      <td>5750.0</td>\n",
       "      <td>RAB/NAEB/SECTOR</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>Diseases and pasts</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Soybean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Tree tomato</td>\n",
       "      <td>1824.717773</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>Good harvest as it was expected</td>\n",
       "      <td>Yes</td>\n",
       "      <td>900.0</td>\n",
       "      <td>Fruits</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Cooking banana</td>\n",
       "      <td>1642.246094</td>\n",
       "      <td>43.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>RAB/NAEB/SECTOR</td>\n",
       "      <td>600.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>Good harvest as it was expected</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cooking banana</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    LSF_ID    s1q1    s1q2  s2q1         s2q2   s2q4  s2q5            s2q6  \\\n",
       "0  12001.0  Kigali  Gasabo   1.0  5474.153809  Mixed   4.0        Soybean    \n",
       "1  12001.0  Kigali  Gasabo   1.0  5474.153809  Mixed   4.0     Tree tomato   \n",
       "2  12001.0  Kigali  Gasabo   1.0  5474.153809  Mixed   4.0  Cooking banana   \n",
       "\n",
       "          s2q7  s2q8  ...  s2q17   s2q18            s2q19  s2q20  s2q21  \\\n",
       "0  3649.435547   NaN  ...   23.0  5750.0  RAB/NAEB/SECTOR    0.0  140.0   \n",
       "1  1824.717773   NaN  ...    NaN     NaN              NaN   50.0    0.0   \n",
       "2  1642.246094  43.0  ...    NaN     0.0  RAB/NAEB/SECTOR  600.0  300.0   \n",
       "\n",
       "   s2q22                            s2q23  s2q24  s2q25      crop_group  \n",
       "0  140.0               Diseases and pasts     No    NaN        Soybean   \n",
       "1   50.0  Good harvest as it was expected    Yes  900.0          Fruits  \n",
       "2  900.0  Good harvest as it was expected     No    NaN  Cooking banana  \n",
       "\n",
       "[3 rows x 30 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data = pd.read_stata(\"raw_data/SeasonA_2017_LSF_Crop production.dta\")\n",
    "raw_data.head(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Digging a little bit deeper into the repository, I found that the column names were listed for each data set in a PDF (example below).  Thus, I created excel documents with the column code and the respective column name (second figure below)\n",
    "\n",
    "#### Add Images\n",
    "#### Add Images\n",
    "\n",
    "\n",
    "I then wrote a function int he `Aggro_DE` to link the excel document column names key to the actual dataset.  An example is shown below using the crop production data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LSF_ID</th>\n",
       "      <th>Province</th>\n",
       "      <th>District</th>\n",
       "      <th>Plot No</th>\n",
       "      <th>Plot area(m^2)</th>\n",
       "      <th>Cropping_System</th>\n",
       "      <th>Crops_In_Plot</th>\n",
       "      <th>crop_name</th>\n",
       "      <th>crop area (m2)</th>\n",
       "      <th>number trees</th>\n",
       "      <th>...</th>\n",
       "      <th>quanitiy improved seeds purchased</th>\n",
       "      <th>improved seeds price</th>\n",
       "      <th>improved seeds origin</th>\n",
       "      <th>quanitiy harvested (kg)</th>\n",
       "      <th>remaining harvested</th>\n",
       "      <th>total harvested</th>\n",
       "      <th>Production Status</th>\n",
       "      <th>Produce sold</th>\n",
       "      <th>farm gate price of crop</th>\n",
       "      <th>crop_group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Soybean</td>\n",
       "      <td>3649.435547</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>23.0</td>\n",
       "      <td>5750.0</td>\n",
       "      <td>RAB/NAEB/SECTOR</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>Diseases and pasts</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Soybean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Tree tomato</td>\n",
       "      <td>1824.717773</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>Good harvest as it was expected</td>\n",
       "      <td>Yes</td>\n",
       "      <td>900.0</td>\n",
       "      <td>Fruits</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Cooking banana</td>\n",
       "      <td>1642.246094</td>\n",
       "      <td>43.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>RAB/NAEB/SECTOR</td>\n",
       "      <td>600.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>Good harvest as it was expected</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Cooking banana</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153809</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Dessert banana</td>\n",
       "      <td>821.123047</td>\n",
       "      <td>20.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>RAB/NAEB/SECTOR</td>\n",
       "      <td>250.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>Good harvest as it was expected</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dessert banana</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>2.0</td>\n",
       "      <td>43546.945312</td>\n",
       "      <td>Pure</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Napia grass for fodder</td>\n",
       "      <td>43546.945312</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>7200.0</td>\n",
       "      <td>39200.0</td>\n",
       "      <td>Good harvest as it was expected</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Other crops</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 30 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    LSF_ID Province District  Plot No  Plot area(m^2) Cropping_System  \\\n",
       "0  12001.0   Kigali   Gasabo      1.0     5474.153809           Mixed   \n",
       "1  12001.0   Kigali   Gasabo      1.0     5474.153809           Mixed   \n",
       "2  12001.0   Kigali   Gasabo      1.0     5474.153809           Mixed   \n",
       "3  12001.0   Kigali   Gasabo      1.0     5474.153809           Mixed   \n",
       "4  12001.0   Kigali   Gasabo      2.0    43546.945312            Pure   \n",
       "\n",
       "   Crops_In_Plot               crop_name  crop area (m2)  number trees  ...  \\\n",
       "0            4.0                Soybean      3649.435547           NaN  ...   \n",
       "1            4.0             Tree tomato     1824.717773           NaN  ...   \n",
       "2            4.0          Cooking banana     1642.246094          43.0  ...   \n",
       "3            4.0          Dessert banana      821.123047          20.0  ...   \n",
       "4            1.0  Napia grass for fodder    43546.945312           NaN  ...   \n",
       "\n",
       "   quanitiy improved seeds purchased improved seeds price  \\\n",
       "0                               23.0               5750.0   \n",
       "1                                NaN                  NaN   \n",
       "2                                NaN                  0.0   \n",
       "3                                NaN                  0.0   \n",
       "4                                NaN                  NaN   \n",
       "\n",
       "  improved seeds origin quanitiy harvested (kg) remaining harvested  \\\n",
       "0       RAB/NAEB/SECTOR                     0.0               140.0   \n",
       "1                   NaN                    50.0                 0.0   \n",
       "2       RAB/NAEB/SECTOR                   600.0               300.0   \n",
       "3       RAB/NAEB/SECTOR                   250.0                50.0   \n",
       "4                   NaN                 32000.0              7200.0   \n",
       "\n",
       "   total harvested                Production Status  Produce sold  \\\n",
       "0            140.0               Diseases and pasts            No   \n",
       "1             50.0  Good harvest as it was expected           Yes   \n",
       "2            900.0  Good harvest as it was expected            No   \n",
       "3            300.0  Good harvest as it was expected            No   \n",
       "4          39200.0  Good harvest as it was expected            No   \n",
       "\n",
       "  farm gate price of crop      crop_group  \n",
       "0                     NaN        Soybean   \n",
       "1                   900.0          Fruits  \n",
       "2                     NaN  Cooking banana  \n",
       "3                     NaN  Dessert banana  \n",
       "4                     NaN     Other crops  \n",
       "\n",
       "[5 rows x 30 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crop_production_data_names = \"SeasonA_2017_LSF_Crop production\"\n",
    "crop_production_var_names = \"2017_LSF_crop_production_var\"\n",
    "\n",
    "crop_production = AgDE.label_data(crop_production_data_names, crop_production_var_names)\n",
    "\n",
    "crop_production.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I then performed the usual checks on the data such as looking for missing values, outliers, and mix data types (strings in a numerical column)  Again, in later posts, I will go step by step into how I delt with these repective issues.  One thing to call out is that in columns that have categorical data such as \"improved seeds origin\" there are `NaN`s rather that something like a \"N/A\" option.  Thus, in such a case I added an additional category \"N/A_improved seeds origin\" using the code below:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Below adding N/A Category\n",
      "RAB/NAEB/SECTOR                    155\n",
      "Shops of improved seeds            110\n",
      "Recognized seed multipliers/NGO    104\n",
      "Other (Specify)                     21\n",
      "Name: improved seeds origin, dtype: int64\n",
      "After adding N/A Category\n",
      "N/A_improved seeds origin          351\n",
      "RAB/NAEB/SECTOR                    155\n",
      "Shops of improved seeds            110\n",
      "Recognized seed multipliers/NGO    104\n",
      "Other (Specify)                     21\n",
      "Name: improved seeds origin, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(\"Below adding N/A Category\")\n",
    "print(crop_production[\"improved seeds origin\"].value_counts())\n",
    "\n",
    "add_category = \"N/A_improved seeds origin\"\n",
    "\n",
    "crop_production[\"improved seeds origin\"] = crop_production[\"improved seeds origin\"].cat.add_categories([add_category])\n",
    "crop_production[\"improved seeds origin\"][crop_production[\"seeds type\"] == \"Traditional seeds\"] = add_category\n",
    "\n",
    "\n",
    "print(\"After adding N/A Category\")\n",
    "print(crop_production[\"improved seeds origin\"].value_counts())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below is a sample of the cleand up dataset after saving it to a seperate folder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>LSF_ID</th>\n",
       "      <th>Province</th>\n",
       "      <th>District</th>\n",
       "      <th>Plot No</th>\n",
       "      <th>Plot area(m^2)</th>\n",
       "      <th>Cropping_System</th>\n",
       "      <th>Crops_In_Plot</th>\n",
       "      <th>crop_name</th>\n",
       "      <th>crop area (m2)</th>\n",
       "      <th>seeds type</th>\n",
       "      <th>quantity seeds sown</th>\n",
       "      <th>quanitiy improved seeds</th>\n",
       "      <th>quanitiy harvested (kg)</th>\n",
       "      <th>total harvested</th>\n",
       "      <th>crop_proportion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Soybean</td>\n",
       "      <td>3649.43550</td>\n",
       "      <td>Improved seeds</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Tree tomato</td>\n",
       "      <td>1824.71780</td>\n",
       "      <td>Traditional seeds</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Cooking banana</td>\n",
       "      <td>1642.24610</td>\n",
       "      <td>Improved seeds</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>600.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>0.300000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>Mixed</td>\n",
       "      <td>4.0</td>\n",
       "      <td>Dessert banana</td>\n",
       "      <td>821.12305</td>\n",
       "      <td>Improved seeds</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>250.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>2.0</td>\n",
       "      <td>43546.945</td>\n",
       "      <td>Pure</td>\n",
       "      <td>1.0</td>\n",
       "      <td>Napia grass for fodder</td>\n",
       "      <td>43546.94500</td>\n",
       "      <td>Traditional seeds</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>39200.0</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0   LSF_ID Province District  Plot No  Plot area(m^2)  \\\n",
       "0           0  12001.0   Kigali   Gasabo      1.0        5474.154   \n",
       "1           1  12001.0   Kigali   Gasabo      1.0        5474.154   \n",
       "2           2  12001.0   Kigali   Gasabo      1.0        5474.154   \n",
       "3           3  12001.0   Kigali   Gasabo      1.0        5474.154   \n",
       "4           4  12001.0   Kigali   Gasabo      2.0       43546.945   \n",
       "\n",
       "  Cropping_System  Crops_In_Plot               crop_name  crop area (m2)  \\\n",
       "0           Mixed            4.0                Soybean       3649.43550   \n",
       "1           Mixed            4.0             Tree tomato      1824.71780   \n",
       "2           Mixed            4.0          Cooking banana      1642.24610   \n",
       "3           Mixed            4.0          Dessert banana       821.12305   \n",
       "4            Pure            1.0  Napia grass for fodder     43546.94500   \n",
       "\n",
       "          seeds type  quantity seeds sown  quanitiy improved seeds  \\\n",
       "0     Improved seeds                  0.0                     23.0   \n",
       "1  Traditional seeds                  0.0                      0.0   \n",
       "2     Improved seeds                  0.0                      0.0   \n",
       "3     Improved seeds                  0.0                      0.0   \n",
       "4  Traditional seeds                  0.0                      0.0   \n",
       "\n",
       "   quanitiy harvested (kg)  total harvested  crop_proportion  \n",
       "0                      0.0            140.0         0.666667  \n",
       "1                     50.0             50.0         0.333333  \n",
       "2                    600.0            900.0         0.300000  \n",
       "3                    250.0            300.0         0.150000  \n",
       "4                  32000.0          39200.0         1.000000  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_production_data = pd.read_csv(\"cleaned_data/MD_SeasonA_2017_LSF_Crop production.csv\")\n",
    "cleaned_production_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I can then load in the fertilizer data using the same function from the `Aggro_DE` library.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LSF_ID</th>\n",
       "      <th>Province</th>\n",
       "      <th>District</th>\n",
       "      <th>Plot No</th>\n",
       "      <th>Plot area(m^2)</th>\n",
       "      <th>Organic fertilizer</th>\n",
       "      <th>organic fertilizer used (kg)</th>\n",
       "      <th>organic fertilizer purchased (kg)</th>\n",
       "      <th>organic fertilizer cost</th>\n",
       "      <th>inorganic fertilizer</th>\n",
       "      <th>inorganic fertilizer type</th>\n",
       "      <th>inorganic fertilizer unit</th>\n",
       "      <th>inorganic fertilizer used (kg)</th>\n",
       "      <th>inorganic fertilizer purchased (kg)</th>\n",
       "      <th>inorganic fertilizer cost</th>\n",
       "      <th>source inorganic fertilizer</th>\n",
       "      <th>crop inorganic fertilizer</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153600</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>2.0</td>\n",
       "      <td>43546.943029</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>3.0</td>\n",
       "      <td>37865.134384</td>\n",
       "      <td>Yes</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>80000.0</td>\n",
       "      <td>Yes</td>\n",
       "      <td>DAP</td>\n",
       "      <td>Kg</td>\n",
       "      <td>118900.0</td>\n",
       "      <td>290.0</td>\n",
       "      <td>410.0</td>\n",
       "      <td>Government(MINAGRI/RAB/NAEB/District</td>\n",
       "      <td>Maize for fodder</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>4.0</td>\n",
       "      <td>30846.701651</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>5.0</td>\n",
       "      <td>44567.784086</td>\n",
       "      <td>Yes</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>60000.0</td>\n",
       "      <td>No</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    LSF_ID Province District  Plot No  Plot area(m^2) Organic fertilizer  \\\n",
       "0  12001.0   Kigali   Gasabo      1.0     5474.153600                 No   \n",
       "1  12001.0   Kigali   Gasabo      2.0    43546.943029                 No   \n",
       "2  12001.0   Kigali   Gasabo      3.0    37865.134384                Yes   \n",
       "3  12001.0   Kigali   Gasabo      4.0    30846.701651                 No   \n",
       "4  12001.0   Kigali   Gasabo      5.0    44567.784086                Yes   \n",
       "\n",
       "   organic fertilizer used (kg)  organic fertilizer purchased (kg)  \\\n",
       "0                           NaN                                NaN   \n",
       "1                           NaN                                NaN   \n",
       "2                       10000.0                             5000.0   \n",
       "3                           NaN                                NaN   \n",
       "4                        5000.0                             5000.0   \n",
       "\n",
       "   organic fertilizer cost inorganic fertilizer inorganic fertilizer type  \\\n",
       "0                      NaN                   No                       NaN   \n",
       "1                      NaN                   No                       NaN   \n",
       "2                  80000.0                  Yes                       DAP   \n",
       "3                      NaN                   No                       NaN   \n",
       "4                  60000.0                   No                       NaN   \n",
       "\n",
       "  inorganic fertilizer unit  inorganic fertilizer used (kg)  \\\n",
       "0                       NaN                             NaN   \n",
       "1                       NaN                             NaN   \n",
       "2                        Kg                        118900.0   \n",
       "3                       NaN                             NaN   \n",
       "4                       NaN                             NaN   \n",
       "\n",
       "   inorganic fertilizer purchased (kg)  inorganic fertilizer cost  \\\n",
       "0                                  NaN                        NaN   \n",
       "1                                  NaN                        NaN   \n",
       "2                                290.0                      410.0   \n",
       "3                                  NaN                        NaN   \n",
       "4                                  NaN                        NaN   \n",
       "\n",
       "            source inorganic fertilizer crop inorganic fertilizer  \n",
       "0                                   NaN                       NaN  \n",
       "1                                   NaN                       NaN  \n",
       "2  Government(MINAGRI/RAB/NAEB/District          Maize for fodder  \n",
       "3                                   NaN                       NaN  \n",
       "4                                   NaN                       NaN  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fertilizer_data_names = \"SeasonA_2017_LSF_Fertilizers\"\n",
    "fertilizer_var_names = \"2017_LSF_fertilizers_var\"\n",
    "\n",
    "fertilizer_data = AgDE.label_data(fertilizer_data_names, fertilizer_var_names)\n",
    "fertilizer_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I then applied the same data checks as before and again will dive deeper into that workflow in another post.  Beyond these usual checks, I wanted to make sure I was capturing how much of each type of inorganic fertilizer was being used.  Thus, I turned the \"inorganic fertilizer type\" into dummie columns and multipled those columns by the \"inorganic fertilizer used (kg)\" column.  Below is a sample of the cleaned up organic and inorganic data.  I split this fertilizer data up in this way in order to make merging easier."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LSF_ID</th>\n",
       "      <th>Province</th>\n",
       "      <th>District</th>\n",
       "      <th>Plot No</th>\n",
       "      <th>Plot area(m^2)</th>\n",
       "      <th>Organic fertilizer</th>\n",
       "      <th>organic fertilizer used (kg)</th>\n",
       "      <th>inorganic fertilizer</th>\n",
       "      <th>inorganic fertilizer type</th>\n",
       "      <th>inorganic fertilizer used (kg)</th>\n",
       "      <th>source inorganic fertilizer</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.153600</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>N/Ainorganic fertilizer type</td>\n",
       "      <td>0.0</td>\n",
       "      <td>N/Asource inorganic fertilizer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>2.0</td>\n",
       "      <td>43546.943029</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>N/Ainorganic fertilizer type</td>\n",
       "      <td>0.0</td>\n",
       "      <td>N/Asource inorganic fertilizer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>3.0</td>\n",
       "      <td>37865.134384</td>\n",
       "      <td>1</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>DAP</td>\n",
       "      <td>118900.0</td>\n",
       "      <td>Government(MINAGRI/RAB/NAEB/District</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>4.0</td>\n",
       "      <td>30846.701651</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>N/Ainorganic fertilizer type</td>\n",
       "      <td>0.0</td>\n",
       "      <td>N/Asource inorganic fertilizer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>5.0</td>\n",
       "      <td>44567.784086</td>\n",
       "      <td>1</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>0</td>\n",
       "      <td>N/Ainorganic fertilizer type</td>\n",
       "      <td>0.0</td>\n",
       "      <td>N/Asource inorganic fertilizer</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    LSF_ID Province District  Plot No  Plot area(m^2)  Organic fertilizer  \\\n",
       "0  12001.0   Kigali   Gasabo      1.0     5474.153600                   0   \n",
       "1  12001.0   Kigali   Gasabo      2.0    43546.943029                   0   \n",
       "2  12001.0   Kigali   Gasabo      3.0    37865.134384                   1   \n",
       "3  12001.0   Kigali   Gasabo      4.0    30846.701651                   0   \n",
       "4  12001.0   Kigali   Gasabo      5.0    44567.784086                   1   \n",
       "\n",
       "   organic fertilizer used (kg)  inorganic fertilizer  \\\n",
       "0                           0.0                     0   \n",
       "1                           0.0                     0   \n",
       "2                       10000.0                     1   \n",
       "3                           0.0                     0   \n",
       "4                        5000.0                     0   \n",
       "\n",
       "      inorganic fertilizer type  inorganic fertilizer used (kg)  \\\n",
       "0  N/Ainorganic fertilizer type                             0.0   \n",
       "1  N/Ainorganic fertilizer type                             0.0   \n",
       "2                           DAP                        118900.0   \n",
       "3  N/Ainorganic fertilizer type                             0.0   \n",
       "4  N/Ainorganic fertilizer type                             0.0   \n",
       "\n",
       "            source inorganic fertilizer  \n",
       "0        N/Asource inorganic fertilizer  \n",
       "1        N/Asource inorganic fertilizer  \n",
       "2  Government(MINAGRI/RAB/NAEB/District  \n",
       "3        N/Asource inorganic fertilizer  \n",
       "4        N/Asource inorganic fertilizer  "
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_Ofertilizer_data = pd.read_csv(\"cleaned_data/MD_SeasonA_2017_LSF_OrganicFertilizers.csv\").iloc[:,1:]\n",
    "cleaned_Ofertilizer_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LSF_ID</th>\n",
       "      <th>Province</th>\n",
       "      <th>District</th>\n",
       "      <th>Plot No</th>\n",
       "      <th>Plot area(m^2)</th>\n",
       "      <th>Organic fertilizer</th>\n",
       "      <th>organic fertilizer used (kg)</th>\n",
       "      <th>inorganic fertilizer</th>\n",
       "      <th>crop_name</th>\n",
       "      <th>DAP</th>\n",
       "      <th>N/Ainorganic fertilizer type</th>\n",
       "      <th>NPK 17-17-17</th>\n",
       "      <th>Urea</th>\n",
       "      <th>Lliquid urea</th>\n",
       "      <th>Other inorganic fertilizer (to specify)</th>\n",
       "      <th>NPK 20-10-10</th>\n",
       "      <th>KCL/MOP</th>\n",
       "      <th>NPK 25-5-5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>3.0</td>\n",
       "      <td>37865.134384</td>\n",
       "      <td>1</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>118900.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>6.0</td>\n",
       "      <td>43255.799107</td>\n",
       "      <td>1</td>\n",
       "      <td>25000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize</td>\n",
       "      <td>137350.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>8.0</td>\n",
       "      <td>169087.335806</td>\n",
       "      <td>1</td>\n",
       "      <td>92000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize</td>\n",
       "      <td>5494.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>29.0</td>\n",
       "      <td>57698.689044</td>\n",
       "      <td>1</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>435.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>30.0</td>\n",
       "      <td>65585.026222</td>\n",
       "      <td>1</td>\n",
       "      <td>17500.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>207870.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>32.0</td>\n",
       "      <td>3761.818039</td>\n",
       "      <td>1</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>33.0</td>\n",
       "      <td>5528.747535</td>\n",
       "      <td>1</td>\n",
       "      <td>1300.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>30.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>12002.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>5.0</td>\n",
       "      <td>242249.752812</td>\n",
       "      <td>1</td>\n",
       "      <td>7230.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize</td>\n",
       "      <td>1482150.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>12003.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>8.0</td>\n",
       "      <td>105113.149787</td>\n",
       "      <td>1</td>\n",
       "      <td>420400.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>750.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>12003.0</td>\n",
       "      <td>Kigali</td>\n",
       "      <td>Gasabo</td>\n",
       "      <td>9.0</td>\n",
       "      <td>92874.042231</td>\n",
       "      <td>1</td>\n",
       "      <td>371600.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Maize for fodder</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>663.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    LSF_ID Province District  Plot No  Plot area(m^2)  Organic fertilizer  \\\n",
       "0  12001.0   Kigali   Gasabo      3.0    37865.134384                   1   \n",
       "1  12001.0   Kigali   Gasabo      6.0    43255.799107                   1   \n",
       "2  12001.0   Kigali   Gasabo      8.0   169087.335806                   1   \n",
       "3  12001.0   Kigali   Gasabo     29.0    57698.689044                   1   \n",
       "4  12001.0   Kigali   Gasabo     30.0    65585.026222                   1   \n",
       "5  12001.0   Kigali   Gasabo     32.0     3761.818039                   1   \n",
       "6  12001.0   Kigali   Gasabo     33.0     5528.747535                   1   \n",
       "7  12002.0   Kigali   Gasabo      5.0   242249.752812                   1   \n",
       "8  12003.0   Kigali   Gasabo      8.0   105113.149787                   1   \n",
       "9  12003.0   Kigali   Gasabo      9.0    92874.042231                   1   \n",
       "\n",
       "   organic fertilizer used (kg)  inorganic fertilizer         crop_name  \\\n",
       "0                       10000.0                     1  Maize for fodder   \n",
       "1                       25000.0                     1             Maize   \n",
       "2                       92000.0                     1             Maize   \n",
       "3                       15000.0                     1  Maize for fodder   \n",
       "4                       17500.0                     1  Maize for fodder   \n",
       "5                        1000.0                     1  Maize for fodder   \n",
       "6                        1300.0                     1  Maize for fodder   \n",
       "7                        7230.0                     1             Maize   \n",
       "8                      420400.0                     1  Maize for fodder   \n",
       "9                      371600.0                     1  Maize for fodder   \n",
       "\n",
       "         DAP  N/Ainorganic fertilizer type  NPK 17-17-17  Urea  Lliquid urea  \\\n",
       "0   118900.0                           0.0           0.0   0.0           0.0   \n",
       "1   137350.0                           0.0           0.0   0.0           0.0   \n",
       "2     5494.0                           0.0           0.0   0.0           0.0   \n",
       "3      435.0                           0.0           0.0   0.0           0.0   \n",
       "4   207870.0                           0.0           0.0   0.0           0.0   \n",
       "5       30.0                           0.0           0.0   0.0           0.0   \n",
       "6       30.0                           0.0           0.0   0.0           0.0   \n",
       "7  1482150.0                           0.0           0.0   0.0           0.0   \n",
       "8        0.0                           0.0         750.0   0.0           0.0   \n",
       "9        0.0                           0.0         663.0   0.0           0.0   \n",
       "\n",
       "   Other inorganic fertilizer (to specify)  NPK 20-10-10  KCL/MOP  NPK 25-5-5  \n",
       "0                                      0.0           0.0      0.0         0.0  \n",
       "1                                      0.0           0.0      0.0         0.0  \n",
       "2                                      0.0           0.0      0.0         0.0  \n",
       "3                                      0.0           0.0      0.0         0.0  \n",
       "4                                      0.0           0.0      0.0         0.0  \n",
       "5                                      0.0           0.0      0.0         0.0  \n",
       "6                                      0.0           0.0      0.0         0.0  \n",
       "7                                      0.0           0.0      0.0         0.0  \n",
       "8                                      0.0           0.0      0.0         0.0  \n",
       "9                                      0.0           0.0      0.0         0.0  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_IOfertilizer_data = pd.read_csv(\"cleaned_data/MD_SeasonA_2017_LSF_Inorganic_Fertilizers.csv\").iloc[:,1:]\n",
    "cleaned_IOfertilizer_data.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Merging the Data Together\n",
    "\n",
    "I then merged the crop production, organic/inorganic fertilizer data together on the \"lsf_id\", \"province\", \"district\", \"plot_no\", \"crop_name\" columns.  Additionally, I used a function from the `Aggro_DE` library to detect which columns are categorical and, make dummie columns out of those categories, delete the origninal column, and append the dummie columns.  Below is an example of the final dataset we are going to train the model on."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lsf_id</th>\n",
       "      <th>plot_no</th>\n",
       "      <th>plot_area(m^2)_x</th>\n",
       "      <th>crops_in_plot</th>\n",
       "      <th>quantity_seeds_sown</th>\n",
       "      <th>quanitiy_improved_seeds</th>\n",
       "      <th>quanitiy_harvested_(kg)</th>\n",
       "      <th>total_harvested</th>\n",
       "      <th>crop_proportion</th>\n",
       "      <th>organic_fertilizer_used_(kg)_x</th>\n",
       "      <th>...</th>\n",
       "      <th>Sugar beet</th>\n",
       "      <th>Sweet pepper</th>\n",
       "      <th>Sweet potato</th>\n",
       "      <th>Taro</th>\n",
       "      <th>Tomato</th>\n",
       "      <th>Tree tomato</th>\n",
       "      <th>Wheat</th>\n",
       "      <th>Both(Trad and Improved</th>\n",
       "      <th>Improved seeds</th>\n",
       "      <th>Traditional seeds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>50.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>600.0</td>\n",
       "      <td>900.0</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5474.154</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>250.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>0.150000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12001.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>43546.945</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>32000.0</td>\n",
       "      <td>39200.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 109 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    lsf_id  plot_no  plot_area(m^2)_x  crops_in_plot  quantity_seeds_sown  \\\n",
       "0  12001.0      1.0          5474.154            4.0                  0.0   \n",
       "1  12001.0      1.0          5474.154            4.0                  0.0   \n",
       "2  12001.0      1.0          5474.154            4.0                  0.0   \n",
       "3  12001.0      1.0          5474.154            4.0                  0.0   \n",
       "4  12001.0      2.0         43546.945            1.0                  0.0   \n",
       "\n",
       "   quanitiy_improved_seeds  quanitiy_harvested_(kg)  total_harvested  \\\n",
       "0                     23.0                      0.0            140.0   \n",
       "1                      0.0                     50.0             50.0   \n",
       "2                      0.0                    600.0            900.0   \n",
       "3                      0.0                    250.0            300.0   \n",
       "4                      0.0                  32000.0          39200.0   \n",
       "\n",
       "   crop_proportion  organic_fertilizer_used_(kg)_x  ...  Sugar beet  \\\n",
       "0         0.666667                             0.0  ...           0   \n",
       "1         0.333333                             0.0  ...           0   \n",
       "2         0.300000                             0.0  ...           0   \n",
       "3         0.150000                             0.0  ...           0   \n",
       "4         1.000000                             0.0  ...           0   \n",
       "\n",
       "   Sweet pepper  Sweet potato  Taro  Tomato  Tree tomato  Wheat  \\\n",
       "0             0             0     0       0            0      0   \n",
       "1             0             0     0       0            1      0   \n",
       "2             0             0     0       0            0      0   \n",
       "3             0             0     0       0            0      0   \n",
       "4             0             0     0       0            0      0   \n",
       "\n",
       "   Both(Trad and Improved  Improved seeds  Traditional seeds  \n",
       "0                       0               1                  0  \n",
       "1                       0               0                  1  \n",
       "2                       0               1                  0  \n",
       "3                       0               1                  0  \n",
       "4                       0               0                  1  \n",
       "\n",
       "[5 rows x 109 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_data = pd.read_csv(\"cleaned_data/MD_SeasonA_2017_fertilizer_crop_production.csv\").iloc[:,1:]\n",
    "model_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Model Building\n",
    "\n",
    "Okay so now we have our nice clean dataset.  Here, we have the \"quanitiy_harvested_(kg)\" column as our target variable and mostly everything else as our features.  Some columns such as \"lsf_id\" will be dropped as they were just being used to merge data on.  The first step is to perform some exploritory data analysis to get a sense of what we are working with.  Right away if we plot our target variable in a histogram, we find that there are lots of zeros."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.0         215\n",
      "2000.0       10\n",
      "600.0         7\n",
      "100.0         7\n",
      "500.0         6\n",
      "           ... \n",
      "932405.0      1\n",
      "282.0         1\n",
      "2256.0        1\n",
      "195.0         1\n",
      "224616.0      1\n",
      "Name: quanitiy_harvested_(kg), Length: 380, dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1d95100f9c8>"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(model_data[\"quanitiy_harvested_(kg)\"].value_counts())\n",
    "model_data[\"quanitiy_harvested_(kg)\"].hist()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is what's known as \"zero-inflated data\" which a whole research field on its own.  This inflation is probamatic because a lot of models assume that the target dataset has close to a gaussian distribution.  We can deal with this in a number ways:\n",
    "\n",
    "* First us a classification model then regression model\n",
    "* Perform some sort of transformation (log, yeo-johnson) on the data to reduce the skew\n",
    "\n",
    "After doing some iterating on my own, I decided to first do a "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
